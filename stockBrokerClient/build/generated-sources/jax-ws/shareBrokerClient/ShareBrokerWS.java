
package shareBrokerClient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "shareBrokerWS", targetNamespace = "http://shareBrokerWS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ShareBrokerWS {


    /**
     * 
     * @return
     *     returns java.util.List<shareBrokerClient.Share>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableShares", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.GetAvailableShares")
    @ResponseWrapper(localName = "getAvailableSharesResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.GetAvailableSharesResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/getAvailableSharesRequest", output = "http://shareBrokerWS/shareBrokerWS/getAvailableSharesResponse")
    public List<Share> getAvailableShares();

    /**
     * 
     * @return
     *     returns java.util.List<shareBrokerClient.Share>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchHighestPrice", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SearchHighestPrice")
    @ResponseWrapper(localName = "searchHighestPriceResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SearchHighestPriceResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/searchHighestPriceRequest", output = "http://shareBrokerWS/shareBrokerWS/searchHighestPriceResponse")
    public List<Share> searchHighestPrice();

    /**
     * 
     * @param quantity
     * @param shareSymbol
     * @return
     *     returns java.util.List<shareBrokerClient.Share>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buyShares", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.BuyShares")
    @ResponseWrapper(localName = "buySharesResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.BuySharesResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/buySharesRequest", output = "http://shareBrokerWS/shareBrokerWS/buySharesResponse")
    public List<Share> buyShares(
        @WebParam(name = "quantity", targetNamespace = "")
        int quantity,
        @WebParam(name = "shareSymbol", targetNamespace = "")
        String shareSymbol);

    /**
     * 
     * @param searchValue
     * @return
     *     returns java.util.List<shareBrokerClient.Share>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchShare", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SearchShare")
    @ResponseWrapper(localName = "searchShareResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SearchShareResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/searchShareRequest", output = "http://shareBrokerWS/shareBrokerWS/searchShareResponse")
    public List<Share> searchShare(
        @WebParam(name = "searchValue", targetNamespace = "")
        String searchValue);

    /**
     * 
     * @param quantAvailable
     * @param userInput
     * @return
     *     returns java.util.List<shareBrokerClient.Share>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sellShares", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SellShares")
    @ResponseWrapper(localName = "sellSharesResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.SellSharesResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/sellSharesRequest", output = "http://shareBrokerWS/shareBrokerWS/sellSharesResponse")
    public List<Share> sellShares(
        @WebParam(name = "userInput", targetNamespace = "")
        String userInput,
        @WebParam(name = "quantAvailable", targetNamespace = "")
        int quantAvailable);

    /**
     * 
     * @return
     *     returns shareBrokerClient.UnmarshalAllResponse.Return
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unmarshalAll", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.UnmarshalAll")
    @ResponseWrapper(localName = "unmarshalAllResponse", targetNamespace = "http://shareBrokerWS/", className = "shareBrokerClient.UnmarshalAllResponse")
    @Action(input = "http://shareBrokerWS/shareBrokerWS/unmarshalAllRequest", output = "http://shareBrokerWS/shareBrokerWS/unmarshalAllResponse")
    public shareBrokerClient.UnmarshalAllResponse.Return unmarshalAll();

}
